apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

ext.versionRelease = 1
ext.versionBreaking = 0
ext.versionFeature = 0
ext.versionFix = 0

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "na.komi.piefi"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.ext.junit.runners.AndroidJUnit4"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'coroutines.pro'

            // Configure Kotlin compiler optimisations for releases, no null checks
            kotlinOptions {
                freeCompilerArgs = [
                        '-Xno-param-assertions',
                        '-Xno-call-assertions',
                        '-Xno-receiver-assertions'
                ]
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/main.kotlin_module'

        exclude("about.html")
        exclude("META-INF/beans.xml")
        exclude("META-INF/eclipse.inf")
        exclude("about_files/LICENSE_CDDL.txt")
        exclude("about_files")
        exclude("META-INF/MANIFEST.MF")
        exclude("META-INF/beans.xml")
        exclude("about.html")
        // Exclude AndroidX version files
        exclude("META-INF/*.version")
        // Exclude consumer proguard files
        exclude("META-INF/proguard/*")
        // Exclude the Firebase/Fabric/other random properties files
        exclude("/*.properties")
        exclude("fabric/*.properties")
        exclude("META-INF/*.properties")
        // Exclude multidex version file
        exclude("androidsupportmultidexversion.txt")
        exclude("VERSION.txt")
        // Exclude kotlin reflection data
        exclude("**/*.kotlin_metadata")
        exclude("kotlin/**")
        exclude("META-INF/*.kotlin_builtins")
        exclude("META-INF/*.kotlin_module")
        exclude("META-INF/rxkotlin.properties")
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }
}

private Integer generateVersionCode() {
    return ext.versionRelease * 10000000 + ext.versionBreaking * 10000 + ext.versionFeature * 100 + ext.versionFix
}

private String generateVersionName() {
    return "${ext.versionRelease}.${ext.versionBreaking}.${ext.versionFeature}.${ext.versionFix}"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.material:material:1.1.0-alpha04"

    implementation "com.github.topjohnwu.libsu:core:2.3.1"

    /** Kotlin Coroutines **/
    def coroutines_version = '1.1.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    /** Leak Canary **/
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}
